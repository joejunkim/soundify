[{"/home/joe/app-academy/projects/soundify/frontend/src/index.js":"1","/home/joe/app-academy/projects/soundify/frontend/src/App.js":"2","/home/joe/app-academy/projects/soundify/frontend/src/store/csrf.js":"3","/home/joe/app-academy/projects/soundify/frontend/src/store/session.js":"4","/home/joe/app-academy/projects/soundify/frontend/src/context/Modal.js":"5","/home/joe/app-academy/projects/soundify/frontend/src/store/index.js":"6","/home/joe/app-academy/projects/soundify/frontend/src/components/LoginFormModal/index.js":"7","/home/joe/app-academy/projects/soundify/frontend/src/components/LoginFormModal/LoginForm.js":"8","/home/joe/app-academy/projects/soundify/frontend/src/components/LandingPage/index.js":"9","/home/joe/app-academy/projects/soundify/frontend/src/components/LibraryPage/index.js":"10","/home/joe/app-academy/projects/soundify/frontend/src/store/library.js":"11","/home/joe/app-academy/projects/soundify/frontend/src/store/playlist.js":"12","/home/joe/app-academy/projects/soundify/frontend/src/components/SignupFormModal/index.js":"13","/home/joe/app-academy/projects/soundify/frontend/src/components/SignupFormModal/SignupForm.js":"14","/home/joe/app-academy/projects/soundify/frontend/src/components/CreatePlaylistModal/index.js":"15","/home/joe/app-academy/projects/soundify/frontend/src/components/CreatePlaylistModal/CreatePlaylistForm.js":"16","/home/joe/app-academy/projects/soundify/frontend/src/components/PlaylistPage/index.js":"17","/home/joe/app-academy/projects/soundify/frontend/src/components/NavigationTop/index.js":"18","/home/joe/app-academy/projects/soundify/frontend/src/components/NavigationTop/ProfileButton.js":"19","/home/joe/app-academy/projects/soundify/frontend/src/components/NavigationSide/index.js":"20","/home/joe/app-academy/projects/soundify/frontend/src/components/DeletePlaylistModal/index.js":"21","/home/joe/app-academy/projects/soundify/frontend/src/components/DeletePlaylistModal/DeletePlaylistForm.js":"22","/home/joe/app-academy/projects/soundify/frontend/src/components/EditPlaylistModal/index.js":"23","/home/joe/app-academy/projects/soundify/frontend/src/components/EditPlaylistModal/EditPlaylistForm.js":"24"},{"size":1070,"mtime":1616108164000,"results":"25","hashOfConfig":"26"},{"size":1446,"mtime":1627581612588,"results":"27","hashOfConfig":"26"},{"size":1158,"mtime":1616108164000,"results":"28","hashOfConfig":"26"},{"size":1717,"mtime":1627529592361,"results":"29","hashOfConfig":"26"},{"size":837,"mtime":1619130978000,"results":"30","hashOfConfig":"26"},{"size":795,"mtime":1627524531126,"results":"31","hashOfConfig":"26"},{"size":489,"mtime":1627591297998,"results":"32","hashOfConfig":"26"},{"size":1795,"mtime":1627591504548,"results":"33","hashOfConfig":"26"},{"size":1618,"mtime":1627585393318,"results":"34","hashOfConfig":"26"},{"size":2316,"mtime":1627581299288,"results":"35","hashOfConfig":"26"},{"size":1495,"mtime":1627537696501,"results":"36","hashOfConfig":"26"},{"size":2729,"mtime":1627579027478,"results":"37","hashOfConfig":"26"},{"size":492,"mtime":1627584246568,"results":"38","hashOfConfig":"26"},{"size":2617,"mtime":1627537776251,"results":"39","hashOfConfig":"26"},{"size":603,"mtime":1627539283141,"results":"40","hashOfConfig":"26"},{"size":1663,"mtime":1627576726538,"results":"41","hashOfConfig":"26"},{"size":1616,"mtime":1627580631298,"results":"42","hashOfConfig":"26"},{"size":1432,"mtime":1627581623218,"results":"43","hashOfConfig":"26"},{"size":1201,"mtime":1627536545391,"results":"44","hashOfConfig":"26"},{"size":1642,"mtime":1627574524858,"results":"45","hashOfConfig":"26"},{"size":594,"mtime":1627580455518,"results":"46","hashOfConfig":"26"},{"size":818,"mtime":1627577572578,"results":"47","hashOfConfig":"26"},{"size":636,"mtime":1627580292978,"results":"48","hashOfConfig":"26"},{"size":1812,"mtime":1627580365768,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"mdmpqn",{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},"/home/joe/app-academy/projects/soundify/frontend/src/index.js",[],["104","105"],"/home/joe/app-academy/projects/soundify/frontend/src/App.js",["106","107","108","109","110"],"/home/joe/app-academy/projects/soundify/frontend/src/store/csrf.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/store/session.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/context/Modal.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/store/index.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/LoginFormModal/index.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/LoginFormModal/LoginForm.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/LandingPage/index.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/LibraryPage/index.js",["111"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useParams } from 'react-router-dom';\nimport { getLibraries } from '../../store/library';\nimport { getPlayLists } from '../../store/playlist';\nimport NavigationTop from '../NavigationTop'\nimport NavigationSide from '../NavigationSide'\nimport './LibraryPage.css';\n\nfunction LibraryPage() {\n    const { page, type } = useParams();\n    const sessionUser = useSelector((state) => state.session.user);\n    const library = useSelector((state) => state.libraries[sessionUser?.id])\n\n    const playlists = useSelector((state) => Object.values(state.playlists))\n    let myPlaylists;\n    if (sessionUser) {\n        myPlaylists = playlists.filter(playlist => (\n            playlist.libraryId === library?.id\n        ))\n    }\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getLibraries())\n        dispatch(getPlayLists())\n    }, [dispatch])\n\n    let collection;\n    if ( type === 'playlists') {\n        collection = (\n            <>\n                <div id='collection__title'>\n                    {type[0].toUpperCase() + type.slice(1)}\n                </div>\n                <div id='playlist__container'>\n                    {myPlaylists?.map(playlist => (\n                        <NavLink to={`/playlist/${playlist.id}`}>\n                            <div id='playlist__card'>\n                                <div id='playlist__img'>\n                                    {playlist.imgUrl}\n                                </div>\n                                <div id='playlist__title'>\n                                    {playlist.title}\n                                </div>\n                            </div>\n                        </NavLink>\n                    ))}\n                </div>\n            </>\n        )\n    } else if ( type === 'songs') { collection = ( <>songs</> )\n    } else if ( type === 'artists') { collection = ( <>artists</>)\n    } else if ( type === 'albums') { collection = ( <>albums</> )\n    }\n\n    return (\n        <div id='library__container'>\n            <NavigationSide />\n            <div id='library__content'>\n                <NavigationTop />\n                {collection}\n            </div>\n        </div>\n    )\n}\n\nexport default LibraryPage;\n","/home/joe/app-academy/projects/soundify/frontend/src/store/library.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/store/playlist.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/SignupFormModal/index.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/SignupFormModal/SignupForm.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/CreatePlaylistModal/index.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/CreatePlaylistModal/CreatePlaylistForm.js",["112"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPlaylist } from \"../../store/playlist\"\n\nimport \"./CreatePlaylist.css\";\n\nfunction CreatePlaylistForm({ setShowModal }) {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector((state) => state.session.user);\n    const [title, setTitle] = useState(\"\");\n    const [imgUrl, setImgUrl] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const payload = {\n            title,\n            imgUrl,\n            description,\n            libraryId: sessionUser.id\n        }\n\n        dispatch(createPlaylist(payload))\n        setShowModal(false);\n    }\n\n    return (\n        <div id='create-playlist__form'>\n            <h1>Create Your Playlist</h1>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    Title\n                    <input\n                        type=\"text\"\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                        required\n                    />\n                </label>\n                <label>\n                    Description\n                    <textarea\n                        type=\"text\"\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                        required\n                    />\n                </label>\n                <button type=\"submit\">Create Playlist</button>\n            </form>\n        </div>\n    )\n}\n\nexport default CreatePlaylistForm;\n","/home/joe/app-academy/projects/soundify/frontend/src/components/PlaylistPage/index.js",["113"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { getPlayLists } from '../../store/playlist';\nimport NavigationTop from '../NavigationTop'\nimport NavigationSide from '../NavigationSide'\nimport EditPlaylistModal from '../EditPlaylistModal'\nimport DeletePlaylistModal from '../DeletePlaylistModal'\nimport './PlaylistPage.css';\n\nfunction PlaylistPage() {\n    const { id } = useParams();\n    const playlist = useSelector((state) => state.playlists[id])\n\n    const dispatch = useDispatch();\n    const reload = () => window.location.reload()\n\n    useEffect(() => {\n        dispatch(getPlayLists)\n    }, [dispatch]);\n\n    return (\n        <div id='playlist-info__container'>\n            <NavigationSide />\n            <div id='playlist-info__content'>\n                <NavigationTop />\n                <div id='playlist-info__header'>\n                    <div id='playlist-info__img'></div>\n                    <div id='playlist-info__info'>\n                        <div id='playlist-info__sub'>{'PLAYLIST'}</div>\n                        <div id='playlist-info__title'>{playlist?.title}</div>\n                        <div id='playlist-info__sub'>{playlist?.description}</div>\n                    </div>\n                </div>\n                <div id='playlist-info__options'>\n                    <div><EditPlaylistModal playlist={playlist} onExit={reload}/></div>\n                    <div><DeletePlaylistModal /></div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PlaylistPage;\n","/home/joe/app-academy/projects/soundify/frontend/src/components/NavigationTop/index.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/NavigationTop/ProfileButton.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/NavigationSide/index.js",["114","115"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useParams } from 'react-router-dom';\nimport { getLibraries } from '../../store/library';\nimport { getPlayLists } from '../../store/playlist';\nimport CreatePlaylistModal from '../CreatePlaylistModal';\n\nimport './NavigationSide.css';\n\nfunction NavigationSide() {\n    const sessionUser = useSelector(state => state.session.user);\n    const library = useSelector((state) => state.libraries[sessionUser?.id])\n\n    const playlists = useSelector((state) => Object.values(state.playlists))\n    let myPlaylists;\n    if (sessionUser) {\n        myPlaylists = playlists.filter(playlist => (\n            playlist.libraryId === library?.id\n        ))\n    }\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getLibraries())\n        dispatch(getPlayLists())\n    }, [dispatch])\n\n    return (\n        <div id='navbar-side__container'>\n            <NavLink to='/home' >\n                Soundify\n            </NavLink>\n            <NavLink to='/home' >\n                Home\n            </NavLink>\n            <NavLink to='/search' >\n                Search\n            </NavLink>\n            <NavLink to='/library/collection/playlists' >\n                Your Library\n            </NavLink>\n            <button>\n                <CreatePlaylistModal />\n            </button>\n            {myPlaylists?.map(playlist => (\n                <NavLink to={`/playlist/${playlist.id}`}>\n                    {playlist.title}\n                </NavLink>\n            ))}\n        </div>\n    )\n}\n\nexport default NavigationSide;\n","/home/joe/app-academy/projects/soundify/frontend/src/components/DeletePlaylistModal/index.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/DeletePlaylistModal/DeletePlaylistForm.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/EditPlaylistModal/index.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/EditPlaylistModal/EditPlaylistForm.js",["116"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport { editPlaylist } from \"../../store/playlist\"\n\nimport \"./EditPlaylist.css\";\n\n\nfunction EditPlaylistForm({ playlist, setShowModal, onExit }) {\n    const { id } = useParams();\n    const sessionUser = useSelector((state) => state.session.user);\n\n    const [title, setTitle] = useState(playlist.title);\n    const [imgUrl, setImgUrl] = useState(playlist.imgUrl);\n    const [description, setDescription] = useState(playlist.description);\n\n    const dispatch = useDispatch();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const payload = {\n            title,\n            imgUrl,\n            description,\n            libraryId: sessionUser.id\n        }\n\n        dispatch(editPlaylist(payload, id))\n        onExit();\n        setShowModal(false)\n    }\n\n    return (\n        <div id='edit-playlist__form'>\n            <h1>Edit Your Playlist</h1>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    Title\n                    <input\n                        type=\"text\"\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                        required\n                    />\n                </label>\n                <label>\n                    Description\n                    <textarea\n                        type=\"text\"\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                        required\n                    />\n                </label>\n                <button type=\"submit\">Confirm Changes</button>\n            </form>\n        </div>\n    )\n}\n\nexport default EditPlaylistForm;\n",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":23},{"ruleId":"121","severity":1,"message":"125","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":22},{"ruleId":"121","severity":1,"message":"126","line":10,"column":10,"nodeType":"123","messageId":"124","endLine":10,"endColumn":15},{"ruleId":"121","severity":1,"message":"127","line":14,"column":10,"nodeType":"123","messageId":"124","endLine":14,"endColumn":19},{"ruleId":"121","severity":1,"message":"128","line":14,"column":21,"nodeType":"123","messageId":"124","endLine":14,"endColumn":33},{"ruleId":"121","severity":1,"message":"129","line":11,"column":13,"nodeType":"123","messageId":"124","endLine":11,"endColumn":17},{"ruleId":"121","severity":1,"message":"130","line":11,"column":20,"nodeType":"123","messageId":"124","endLine":11,"endColumn":29},{"ruleId":"121","severity":1,"message":"131","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"131","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"132","line":3,"column":19,"nodeType":"123","messageId":"124","endLine":3,"endColumn":28},{"ruleId":"121","severity":1,"message":"130","line":14,"column":20,"nodeType":"123","messageId":"124","endLine":14,"endColumn":29},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'SignupFormModal' is defined but never used.","Identifier","unusedVar","'LoginFormModal' is defined but never used.","'Modal' is defined but never used.","'showModal' is assigned a value but never used.","'setShowModal' is assigned a value but never used.","'page' is assigned a value but never used.","'setImgUrl' is assigned a value but never used.","'useState' is defined but never used.","'useParams' is defined but never used.","no-global-assign","no-unsafe-negation"]