[{"/home/joe/app-academy/projects/soundify/frontend/src/index.js":"1","/home/joe/app-academy/projects/soundify/frontend/src/App.js":"2","/home/joe/app-academy/projects/soundify/frontend/src/store/csrf.js":"3","/home/joe/app-academy/projects/soundify/frontend/src/store/session.js":"4","/home/joe/app-academy/projects/soundify/frontend/src/context/Modal.js":"5","/home/joe/app-academy/projects/soundify/frontend/src/store/index.js":"6","/home/joe/app-academy/projects/soundify/frontend/src/components/LoginFormModal/index.js":"7","/home/joe/app-academy/projects/soundify/frontend/src/components/LoginFormModal/LoginForm.js":"8","/home/joe/app-academy/projects/soundify/frontend/src/components/LandingPage/index.js":"9","/home/joe/app-academy/projects/soundify/frontend/src/components/LibraryPage/index.js":"10","/home/joe/app-academy/projects/soundify/frontend/src/store/playlist.js":"11","/home/joe/app-academy/projects/soundify/frontend/src/components/SignupFormModal/index.js":"12","/home/joe/app-academy/projects/soundify/frontend/src/components/SignupFormModal/SignupForm.js":"13","/home/joe/app-academy/projects/soundify/frontend/src/components/CreatePlaylistModal/index.js":"14","/home/joe/app-academy/projects/soundify/frontend/src/components/CreatePlaylistModal/CreatePlaylistForm.js":"15","/home/joe/app-academy/projects/soundify/frontend/src/components/PlaylistPage/index.js":"16","/home/joe/app-academy/projects/soundify/frontend/src/components/NavigationTop/index.js":"17","/home/joe/app-academy/projects/soundify/frontend/src/components/NavigationTop/ProfileButton.js":"18","/home/joe/app-academy/projects/soundify/frontend/src/components/NavigationSide/index.js":"19","/home/joe/app-academy/projects/soundify/frontend/src/components/DeletePlaylistModal/index.js":"20","/home/joe/app-academy/projects/soundify/frontend/src/components/DeletePlaylistModal/DeletePlaylistForm.js":"21","/home/joe/app-academy/projects/soundify/frontend/src/components/EditPlaylistModal/index.js":"22","/home/joe/app-academy/projects/soundify/frontend/src/components/EditPlaylistModal/EditPlaylistForm.js":"23","/home/joe/app-academy/projects/soundify/frontend/src/components/SignupFormModal/CreateUser.js":"24","/home/joe/app-academy/projects/soundify/frontend/src/components/ArtistPage/index.js":"25","/home/joe/app-academy/projects/soundify/frontend/src/store/artists.js":"26","/home/joe/app-academy/projects/soundify/frontend/src/store/albums.js":"27","/home/joe/app-academy/projects/soundify/frontend/src/components/AlbumPage/index.js":"28","/home/joe/app-academy/projects/soundify/frontend/src/store/library.js":"29","/home/joe/app-academy/projects/soundify/frontend/src/store/songs.js":"30","/home/joe/app-academy/projects/soundify/frontend/src/components/SearchPage/index.js":"31","/home/joe/app-academy/projects/soundify/frontend/src/store/songtolibrary.js":"32","/home/joe/app-academy/projects/soundify/frontend/src/store/songtoplaylist.js":"33","/home/joe/app-academy/projects/soundify/frontend/src/context/MusicPlayer.js":"34"},{"size":1193,"mtime":1627867342637,"results":"35","hashOfConfig":"36"},{"size":1575,"mtime":1627867729027,"results":"37","hashOfConfig":"36"},{"size":1296,"mtime":1627618049449,"results":"38","hashOfConfig":"36"},{"size":2457,"mtime":1627618111609,"results":"39","hashOfConfig":"36"},{"size":806,"mtime":1627857395067,"results":"40","hashOfConfig":"36"},{"size":1155,"mtime":1627775467305,"results":"41","hashOfConfig":"36"},{"size":489,"mtime":1627591297998,"results":"42","hashOfConfig":"36"},{"size":1684,"mtime":1627608326769,"results":"43","hashOfConfig":"36"},{"size":1583,"mtime":1627690967418,"results":"44","hashOfConfig":"36"},{"size":3745,"mtime":1627860968567,"results":"45","hashOfConfig":"36"},{"size":2728,"mtime":1627684487208,"results":"46","hashOfConfig":"36"},{"size":531,"mtime":1627618956889,"results":"47","hashOfConfig":"36"},{"size":2795,"mtime":1627679971708,"results":"48","hashOfConfig":"36"},{"size":603,"mtime":1627539283141,"results":"49","hashOfConfig":"36"},{"size":1657,"mtime":1627681618978,"results":"50","hashOfConfig":"36"},{"size":2944,"mtime":1627778304815,"results":"51","hashOfConfig":"36"},{"size":2068,"mtime":1627758080388,"results":"52","hashOfConfig":"36"},{"size":1201,"mtime":1627536545391,"results":"53","hashOfConfig":"36"},{"size":2550,"mtime":1627771105260,"results":"54","hashOfConfig":"36"},{"size":670,"mtime":1627856565757,"results":"55","hashOfConfig":"36"},{"size":1098,"mtime":1627778353405,"results":"56","hashOfConfig":"36"},{"size":687,"mtime":1627856644777,"results":"57","hashOfConfig":"36"},{"size":2127,"mtime":1627681680688,"results":"58","hashOfConfig":"36"},{"size":2829,"mtime":1627619022809,"results":"59","hashOfConfig":"36"},{"size":2100,"mtime":1627762439738,"results":"60","hashOfConfig":"36"},{"size":840,"mtime":1627680309898,"results":"61","hashOfConfig":"36"},{"size":818,"mtime":1627682882798,"results":"62","hashOfConfig":"36"},{"size":4729,"mtime":1627867342627,"results":"63","hashOfConfig":"36"},{"size":1499,"mtime":1627679968734,"results":"64","hashOfConfig":"36"},{"size":796,"mtime":1627686477848,"results":"65","hashOfConfig":"36"},{"size":4186,"mtime":1627758678128,"results":"66","hashOfConfig":"36"},{"size":2201,"mtime":1627860997627,"results":"67","hashOfConfig":"36"},{"size":2241,"mtime":1627775445085,"results":"68","hashOfConfig":"36"},{"size":939,"mtime":1627868942197,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"mdmpqn",{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/joe/app-academy/projects/soundify/frontend/src/index.js",["149"],"/home/joe/app-academy/projects/soundify/frontend/src/App.js",["150","151"],"/home/joe/app-academy/projects/soundify/frontend/src/store/csrf.js",[],["152","153"],"/home/joe/app-academy/projects/soundify/frontend/src/store/session.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/context/Modal.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/store/index.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/LoginFormModal/index.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/LoginFormModal/LoginForm.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/LandingPage/index.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/LibraryPage/index.js",["154"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useParams } from 'react-router-dom';\nimport { getLibraries } from '../../store/library';\nimport { getPlayLists } from '../../store/playlist';\nimport { getSongs } from '../../store/songs'\nimport { getlibrarySongs, deletelibrarySong } from '../../store/songtolibrary';\nimport NavigationTop from '../NavigationTop'\nimport NavigationSide from '../NavigationSide'\nimport image from './default_playlist.png'\nimport './LibraryPage.css';\n\nfunction LibraryPage() {\n    const { type } = useParams();\n    const sessionUser = useSelector((state) => state.session.user);\n    const library = useSelector((state) => state.libraries[sessionUser?.id])\n    const songs = useSelector((state) => (state.songs))\n\n    const dispatch = useDispatch();\n\n    const playlists = useSelector((state) => Object.values(state.playlists))\n    let myPlaylists;\n    if (sessionUser) {\n        myPlaylists = playlists.filter(playlist => (\n                playlist.libraryId === library?.id\n            ))\n        }\n\n    const librarySongs = useSelector((state) => Object.values(state.librarySongs))\n\n    let mySongs = [];\n    const filteredSongs = librarySongs.filter(librarySong => (\n        librarySong.libraryId === library?.id\n    ))\n\n    filteredSongs.forEach(librarySong => {\n        mySongs.push(songs[librarySong.songId])\n    })\n\n    useEffect(() => {\n        dispatch(getLibraries())\n        dispatch(getPlayLists())\n        dispatch(getSongs())\n        dispatch(getlibrarySongs())\n    }, [dispatch])\n\n    const removeFromLibrary = (song) => {\n        const payload = {\n            songId: song.id,\n            libraryId: sessionUser.id\n        }\n\n        dispatch(deletelibrarySong(payload))\n        window.location.reload()\n    }\n\n    let collection;\n    if ( type === 'playlists') {\n        collection = (<><div id='collection__name'>\n                            Playlists\n                        </div>\n                        <div id='playlist__container'>\n                            {myPlaylists?.map(playlist => (\n                                <NavLink to={`/playlist/${playlist.id}`}>\n                                    <div id='playlist__card'>\n                                        <img src={image} alt='playlist image'/>\n                                        <div id='playlist__name'>{playlist.name}</div>\n                                    </div>\n                                </NavLink>\n                    ))}\n                </div></>)\n    } else if ( type === 'artists') {\n        collection = (\n            <><div id='collection__name'>\n                    Artists\n                </div></> )\n    } else if ( type === 'albums') {\n        collection = (\n            <><div id='collection__name'>\n                    Albums\n                </div></> )\n    } else if ( type === 'songs') {\n        collection = (\n            <><div id='collection__name'>\n                    Songs\n                </div>\n                <div id='song-content'>\n                    {mySongs?.map((song, i) => (\n                        <div key={song?.id} id='song__bar'>\n                            <div id='song__id'>{i + 1}</div>\n                            <div id='song__name'>{song?.name}</div>\n                            <button type='click' onClick={() => removeFromLibrary(song)}>Remove</button>\n                        </div>\n                    ))}\n                </div></>)\n    }\n\n    return (\n        <div id='library__container'>\n            <NavigationSide />\n            <div id='library__content'>\n                <NavigationTop />\n                {collection}\n            </div>\n        </div>\n    )\n}\n\nexport default LibraryPage;\n","/home/joe/app-academy/projects/soundify/frontend/src/store/playlist.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/SignupFormModal/index.js",["155"],"import React, { useState } from 'react';\nimport { Modal } from '../../context/Modal';\nimport SignupForm from './SignupForm';\nimport CreateUser from './CreateUser';\n\nfunction SignupFormModal() {\n    const [showModal, setShowModal] = useState(false);\n\n    return (\n      <>\n        <button onClick={() => setShowModal(true)}>Sign Up</button>\n        {showModal && (\n          <Modal onClose={() => setShowModal(false)}>\n            <CreateUser />\n          </Modal>\n        )}\n      </>\n    );\n  }\n\n  export default SignupFormModal;\n","/home/joe/app-academy/projects/soundify/frontend/src/components/SignupFormModal/SignupForm.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/CreatePlaylistModal/index.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/CreatePlaylistModal/CreatePlaylistForm.js",["156"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPlaylist } from \"../../store/playlist\"\n\nimport \"./CreatePlaylist.css\";\n\nfunction CreatePlaylistForm({ setShowModal }) {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector((state) => state.session.user);\n    const [name, setName] = useState(\"\");\n    const [imgUrl, setImgUrl] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const payload = {\n            name,\n            imgUrl,\n            description,\n            libraryId: sessionUser.id\n        }\n\n        dispatch(createPlaylist(payload))\n        setShowModal(false);\n    }\n\n    return (\n        <div id='create-playlist__form'>\n            <h1>Create Your Playlist</h1>\n            <form onSubmit={handleSubmit}>\n                <label>\n                    Name\n                    <input\n                        type=\"text\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        required\n                    />\n                </label>\n                <label>\n                    Description\n                    <textarea\n                        type=\"text\"\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                        required\n                    />\n                </label>\n                <button type=\"submit\">Create Playlist</button>\n            </form>\n        </div>\n    )\n}\n\nexport default CreatePlaylistForm;\n","/home/joe/app-academy/projects/soundify/frontend/src/components/PlaylistPage/index.js",["157"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { getPlayLists } from '../../store/playlist';\nimport { getSongs } from '../../store/songs'\nimport { getPlaylistSongs, deletePlaylistSong } from '../../store/songtoplaylist';\nimport NavigationTop from '../NavigationTop'\nimport NavigationSide from '../NavigationSide'\nimport EditPlaylistModal from '../EditPlaylistModal'\nimport DeletePlaylistModal from '../DeletePlaylistModal'\nimport image from './default_playlist.png'\nimport './PlaylistPage.css';\n\nfunction PlaylistPage() {\n    const { id } = useParams();\n    const playlist = useSelector((state) => state.playlists[id])\n    const songs = useSelector((state) => (state.songs))\n\n    const dispatch = useDispatch();\n    const reload = () => window.location.reload()\n\n    const playlistSongs = useSelector((state) => Object.values(state.playlistSongs))\n\n    let mySongs = [];\n    const filteredSongs = playlistSongs.filter(playlistSong => (\n        playlistSong.playlistId === playlist?.id\n    ))\n\n    filteredSongs.forEach(playlistSong => {\n        mySongs.push(songs[playlistSong.songId])\n    })\n\n    useEffect(() => {\n        dispatch(getPlayLists())\n        dispatch(getSongs())\n        dispatch(getPlaylistSongs())\n    }, [dispatch]);\n\n    const removeFromPlaylist = (song) => {\n        const payload = {\n            songId: song.id,\n            playlistId: playlist.id\n        }\n\n        dispatch(deletePlaylistSong(payload))\n        window.location.reload()\n    }\n\n    return (\n        <div id='playlist-info__container'>\n            <NavigationSide />\n            <div id='playlist-info__content'>\n                <NavigationTop />\n                <div id='playlist-info__header'>\n                    <img src={image} alt='playlist image'/>\n                    <div id='playlist-info__info'>\n                        <div id='playlist-info__sub'>{'PLAYLIST'}</div>\n                        <div id='playlist-info__name'>{playlist?.name}</div>\n                        <div id='playlist-info__sub'>{playlist?.description}</div>\n                    </div>\n                </div>\n                <div id='playlist-info__options'>\n                    <div><EditPlaylistModal playlist={playlist} onExit={reload}/></div>\n                    <div><DeletePlaylistModal mySongs={mySongs}/></div>\n                </div>\n                <div id='song-content'>\n                    {mySongs?.map((song, i) => (\n                        <div key={song?.id} id='song__bar'>\n                            <div id='song__id'>{i + 1}</div>\n                            <div id='song__name'>{song?.name}</div>\n                            <button type='click' onClick={() => removeFromPlaylist(song)}>Remove</button>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PlaylistPage;\n","/home/joe/app-academy/projects/soundify/frontend/src/components/NavigationTop/index.js",["158","159"],"import React from 'react';\nimport { NavLink, useParams, useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as sessionActions from \"../../store/session\";\nimport ProfileButton from './ProfileButton';\nimport LoginFormModal from '../LoginFormModal';\nimport SignupFormModal from '../SignupFormModal';\n\nimport { BsCaretLeft, BsCaretRight } from 'react-icons/bs';\n\nimport './NavigationTop.css';\n\nfunction NavigationTop({ searchNav }){\n  const sessionUser = useSelector(state => state.session.user);\n  const dispatch = useDispatch();\n  const history = useDispatch();\n  const { library } = useParams()\n\n  const goBack = () => {\n    window.history.back()\n  }\n\n  const goForward = () => {\n    window.history.forward()\n  }\n\n  let sessionLinks;\n  if (sessionUser) {\n    sessionLinks = (\n      <ProfileButton user={sessionUser} />\n    );\n  } else {\n    sessionLinks = (\n      <>\n        <button onClick={() => handleDemo()}>Demo User</button>\n        <SignupFormModal/>\n        <LoginFormModal />\n      </>\n    );\n  }\n\n  const handleDemo = () => {\n    const credential = 'DemoUser'\n    const password = 'password'\n    dispatch(sessionActions.login({ credential, password }))\n}\n\n  let middleNav;\n  if ( library ) {\n    middleNav = (\n      <>\n        <NavLink exact to=\"/library/collection/playlists\">Playlists</NavLink>\n        <NavLink exact to=\"/library/collection/artists\">Artists</NavLink>\n        <NavLink exact to=\"/library/collection/albums\">Albums</NavLink>\n        <NavLink exact to=\"/library/collection/songs\">Songs</NavLink>\n      </>\n    )\n  } else {\n    middleNav = searchNav\n  }\n\n  return (\n    <div id='navbar-top__container'>\n      <div id='navbar-top__arrows'>\n          <button type='click' onClick={goBack}><BsCaretLeft /></button>\n          <button type='click' onClick={goForward}><BsCaretRight /></button>\n      </div>\n      <div id='navbar-top__links'>\n        {middleNav}\n      </div>\n      <div id='navbar-top__session'>\n        {sessionLinks}\n      </div>\n    </div>\n  );\n}\n\nexport default NavigationTop;\n","/home/joe/app-academy/projects/soundify/frontend/src/components/NavigationTop/ProfileButton.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/NavigationSide/index.js",["160","161"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useParams } from 'react-router-dom';\nimport { getLibraries } from '../../store/library';\nimport { getPlayLists } from '../../store/playlist';\nimport CreatePlaylistModal from '../CreatePlaylistModal';\n\nimport { BiSearch, BiHomeAlt } from \"react-icons/bi\";\nimport { VscLibrary } from \"react-icons/vsc\"\nimport { RiPlayListLine } from \"react-icons/ri\"\n\nimport './NavigationSide.css';\n\nfunction NavigationSide() {\n    const sessionUser = useSelector(state => state.session.user);\n    const library = useSelector((state) => state.libraries[sessionUser?.id])\n\n    const playlists = useSelector((state) => Object.values(state.playlists))\n    let myPlaylists;\n    if (sessionUser) {\n        myPlaylists = playlists.filter(playlist => (\n            playlist.libraryId === library?.id\n        ))\n    }\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getLibraries())\n        dispatch(getPlayLists())\n    }, [dispatch])\n\n    return (\n        <div id='navbar-side__container'>\n                <NavLink to='/' id='navbar-side__logo' activeClassName=''>\n                    Soundify\n                </NavLink>\n            <div id='navbar-side__links'>\n                <NavLink to='/home' >\n                    <BiHomeAlt className='navbar-icon'/>Home\n                </NavLink>\n                <NavLink to='/search' >\n                    <BiSearch className='navbar-icon'/>Search\n                </NavLink>\n                { sessionUser\n                    ? (<NavLink to='/library/collection/playlists' ><VscLibrary className='navbar-icon'/>Your Library</NavLink>)\n                    : (<></>)\n                }\n            </div>\n            { sessionUser\n                ? (<div id='navbar-side__playlists'>\n                        <div id='navbar-side__playlists-name'>\n                            Your Playlists\n                        </div>\n                        <div id='navbar-side__create'>\n                            <CreatePlaylistModal />\n                        </div>\n                        {myPlaylists?.map(playlist => (\n                            <NavLink to={`/playlist/${playlist.id}`} key={playlist.id}>\n                                <RiPlayListLine className='navbar-icon'/> {playlist.name}\n                            </NavLink>\n                        ))}\n                    </div>)\n                : (<></>)\n            }\n        </div>\n    )\n}\n\nexport default NavigationSide;\n","/home/joe/app-academy/projects/soundify/frontend/src/components/DeletePlaylistModal/index.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/DeletePlaylistModal/DeletePlaylistForm.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/EditPlaylistModal/index.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/EditPlaylistModal/EditPlaylistForm.js",["162"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport { editPlaylist } from \"../../store/playlist\"\n\nimport \"./EditPlaylist.css\";\n\n\nfunction EditPlaylistForm({ playlist, setShowModal, onExit }) {\n    const { id } = useParams();\n    const sessionUser = useSelector((state) => state.session.user);\n\n    const [name, setName] = useState(playlist.name);\n    const [imgUrl, setImgUrl] = useState(playlist.imgUrl);\n    const [description, setDescription] = useState(playlist.description);\n\n    const dispatch = useDispatch();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const payload = {\n            name,\n            imgUrl,\n            description,\n            libraryId: sessionUser.id\n        }\n\n        dispatch(editPlaylist(payload, id))\n        onExit();\n        setShowModal(false)\n    }\n\n    return (\n        <div id='edit__form'>\n            <form onSubmit={handleSubmit}>\n            <h1>Edit Details</h1>\n                <div id='edit__info'>\n                    <div id='edit__img' />\n                    <div id='edit__input'>\n                        <label>\n                            <div>Name</div>\n                            <input\n                                type=\"text\"\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                                required\n                                />\n                        </label>\n                        <label>\n                            Description\n                            <textarea\n                                type=\"text\"\n                                value={description}\n                                onChange={(e) => setDescription(e.target.value)}\n                                required\n                                />\n                        </label>\n                    </div>\n                </div>\n                <button type=\"submit\">Confirm Changes</button>\n            </form>\n        </div>\n    )\n}\n\nexport default EditPlaylistForm;\n","/home/joe/app-academy/projects/soundify/frontend/src/components/SignupFormModal/CreateUser.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/ArtistPage/index.js",["163","164"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport { getArtists } from '../../store/artists';\nimport { getAlbums } from '../../store/albums'\nimport NavigationTop from '../NavigationTop'\nimport NavigationSide from '../NavigationSide'\n\nimport image from './default_playlist.png'\n\nimport './ArtistPage.css';\n\nfunction ArtistPage() {\n    const { id } = useParams();\n    const artist = useSelector((state) => state.artists[id])\n    const albums = useSelector((state) => Object.values(state.albums))\n\n    const artistAlbums = albums?.filter(album => (\n        album.artistId == id\n    ))\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getArtists())\n        dispatch(getAlbums())\n    }, [dispatch]);\n    return (\n        <div id='artist-info__container'>\n            <NavigationSide />\n            <div id='artist-info__content'>\n                <NavigationTop />\n                <div id='artist-info__header'>\n                    <img src={image} alt='artist image'/>\n                    <div id='artist-info__info'>\n                        <div id='artist-info__sub'>{'ARTIST'}</div>\n                        <div id='artist-info__name'>{artist?.name}</div>\n                        <div id='artist-info__sub'>{artist?.description}</div>\n                    </div>\n                </div>\n                <div id='album__header'>Albums</div>\n                <div id='album__container'>\n                    <div id='album__content'>\n                        {artistAlbums?.map(album => (\n                            <NavLink to={`/album/${album.id}`}>\n                                <div id='album__card'>\n                                    <img alt='album cover'/>\n                                    <div id='album__name'>{album.name}</div>\n                                </div>\n                            </NavLink>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ArtistPage;\n","/home/joe/app-academy/projects/soundify/frontend/src/store/artists.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/store/albums.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/AlbumPage/index.js",["165","166","167","168","169","170","171","172","173"],"import React, { useState, useEffect, useContext } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport { getAlbums } from '../../store/albums'\nimport { getSongs } from '../../store/songs'\nimport { getlibrarySongs, createlibrarySong, deletelibrarySong } from '../../store/songtolibrary'\nimport { getPlaylistSongs, createPlaylistSong, deletePlaylistSong } from '../../store/songtoplaylist'\nimport NavigationTop from '../NavigationTop'\nimport NavigationSide from '../NavigationSide'\nimport { MusicPlayerContext } from '../../context/MusicPlayer'\n\nimport { AiOutlineHeart, AiFillHeart } from \"react-icons/ai\"\n\nimport './AlbumPage.css';\n\nfunction AlbumPage() {\n    const [inLibrary, setInLibrary] = useState(false)\n\n    const { id } = useParams();\n    const { setType, setSource } = useContext(MusicPlayerContext)\n\n    const sessionUser = useSelector((state) => state.session.user);\n    const library = useSelector((state) => state.libraries[sessionUser?.id])\n    const album = useSelector((state) => state.albums[id])\n\n    const playlists = useSelector((state) => Object.values(state.playlists))\n    let myPlaylists;\n    if (sessionUser) {\n        myPlaylists = playlists.filter(playlist => (\n            playlist.libraryId === library?.id\n            ))\n        }\n\n    const songs = useSelector((state) => Object.values(state.songs))\n    const albumSongs = songs?.filter(song => (\n        song.albumId == id\n    ))\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getAlbums())\n        dispatch(getSongs())\n        dispatch(getlibrarySongs())\n    }, [dispatch, createlibrarySong]);\n\n    const addToLibrary = (song) => {\n        const payload = {\n            songId: song.id,\n            libraryId: sessionUser.id\n        }\n\n        dispatch(createlibrarySong(payload))\n        window.alert(\"Song added to your library\")\n        // setInLibrary(true)\n    }\n\n    const addToPlaylist = (song, playlistStr) => {\n        const playlistId = parseInt(playlistStr)\n\n        const payload = {\n            songId: song.id,\n            playlistId\n        }\n\n        dispatch(createPlaylistSong(payload))\n        window.alert(\"Song added to your playlist\")\n    }\n\n    const playSong = (song) => {\n        setType('track')\n        setSource('5zJKzElmt5WmrbbNVv9lUO?theme=0')\n    }\n\n    return (\n        <div id='album-info__container'>\n            <NavigationSide />\n            <div id='album-info__content'>\n                <NavigationTop />\n                <div id='album-info__header'>\n                    <img alt='album image'/>\n                    <div id='album-info__info'>\n                        <div id='album-info__sub'>{'ALBUM'}</div>\n                        <div id='album-info__name'>{album?.name}</div>\n                        <div id='album-info__sub'>{album?.year}</div>\n                    </div>\n                </div>\n                <div id='song__header'>Songs</div>\n                <div id='song__container'>\n                    <div id='song__content'>\n                        {albumSongs?.map((song, i) => (\n                            <div key={song.id} id='song__bar'>\n                                <div id='song__id'>{i + 1}</div>\n                                <div id='song__name'>{song?.name}</div>\n                                { !inLibrary\n                                    ?   (<div id='song__heart'>\n                                            {/* <AiOutlineHeart type='click' onClick={(song) => addToLibrary}/> */}\n                                            <button type='click' onClick={() => addToLibrary(song)}>Add To Library</button>\n                                            <select onChange={(e) => addToPlaylist(song, e.target.value)}>\n                                                <option value=\"\">--Add To Playlist--</option>\n                                                {myPlaylists?.map(playlist => (\n                                                    <option key={playlist.id} value={playlist.id}>{playlist.name}</option>\n                                                ))}\n                                            </select>\n                                            <button onClick={() => playSong(song)}>Play</button>\n                                        </div>)\n                                    :   (<div id='song__heart'>\n                                            <AiFillHeart type='click'/>\n                                        </div>)\n                                }\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AlbumPage;\n","/home/joe/app-academy/projects/soundify/frontend/src/store/library.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/store/songs.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/components/SearchPage/index.js",["174","175"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink } from 'react-router-dom';\nimport { getPlayLists } from '../../store/playlist';\nimport { getArtists } from '../../store/artists';\nimport { getAlbums } from '../../store/albums';\nimport { getSongs } from '../../store/songs';\nimport NavigationTop from '../NavigationTop'\nimport NavigationSide from '../NavigationSide'\n\nimport './SearchPage.css'\n\nfunction SearchPage() {\n    const [searchValue, setSearchValue] = useState('')\n\n    const playlists = useSelector((state) => Object.values(state.playlists))\n    const artists = useSelector((state) => Object.values(state.artists))\n    const albums = useSelector((state) => Object.values(state.albums))\n    const songs = useSelector((state) => Object.values(state.songs))\n\n    let searchPlaylists;\n    let searchArtists;\n    let searchAlbums;\n    let searchSongs;\n\n    if (searchValue) {\n        searchPlaylists = playlists?.filter(playlist => (playlist.name.toLowerCase().includes(searchValue.toLowerCase())))\n        searchArtists = artists?.filter(artist => (artist.name.toLowerCase().includes(searchValue.toLowerCase())))\n        searchAlbums = albums?.filter(album => (album.name.toLowerCase().includes(searchValue.toLowerCase())))\n        searchSongs = songs?.filter(song => (song.name.toLowerCase().includes(searchValue.toLowerCase())))\n    }\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getPlayLists())\n        dispatch(getArtists())\n        dispatch(getAlbums())\n        dispatch(getSongs())\n    }, [dispatch]);\n\n    const searchNav = (\n        <input onChange={(e) => setSearchValue(e.target.value)} placeholder=\"Search by playlist, artist, album, or song\" />\n    )\n\n    return (\n        <div id='search__container'>\n            <NavigationSide />\n            <div id='search__content'>\n                <NavigationTop searchNav={searchNav}/>\n                <div id='search__content-results'>\n                    <div className='search__header'>Playlists</div>\n                    <div className='search__results'>\n                        {searchPlaylists?.map(playlist => (\n                            <NavLink to={`/playlist/${playlist.id}`}>\n                                <div id='search__card'>\n                                        <img alt='playlist image'/>\n                                        {playlist.name}\n                                </div>\n                            </NavLink>\n                        ))}\n                    </div>\n                    <div className='search__header'>Artists</div>\n                    <div className='search__results'>\n                        {searchArtists?.map(artist => (\n                            <NavLink to={`/artist/${artist.id}`}>\n                                <div id='search__card'>\n                                    <img alt='artist image'/>\n                                    {artist.name}\n                                </div>\n                            </NavLink>\n                        ))}\n                    </div>\n                    <div className='search__header'>Albums</div>\n                    <div className='search__results'>\n                        {searchAlbums?.map(album => (\n                            <NavLink to={`/album/${album.id}`}>\n                                <div id='search__card'>\n                                    <img alt='album cover'/>\n                                    {album.name}\n                                </div>\n                            </NavLink>\n                        ))}\n                    </div>\n                    <div className='search__header'>Songs</div>\n                    <div className='search__results-songs'>\n                        {searchSongs?.map(song => (\n                            <div key={song.id} id='song__bar'>\n                                <div id='song__name'>{song.name}</div>\n                                {song.albumId}\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchPage;\n","/home/joe/app-academy/projects/soundify/frontend/src/store/songtolibrary.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/store/songtoplaylist.js",[],"/home/joe/app-academy/projects/soundify/frontend/src/context/MusicPlayer.js",["176"],{"ruleId":"177","severity":1,"message":"178","line":32,"column":7,"nodeType":"179","messageId":"180","endLine":32,"endColumn":18},{"ruleId":"177","severity":1,"message":"181","line":16,"column":10,"nodeType":"179","messageId":"180","endLine":16,"endColumn":19},{"ruleId":"177","severity":1,"message":"182","line":16,"column":21,"nodeType":"179","messageId":"180","endLine":16,"endColumn":33},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":66,"column":41,"nodeType":"189","endLine":66,"endColumn":80},{"ruleId":"177","severity":1,"message":"190","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":18},{"ruleId":"177","severity":1,"message":"191","line":11,"column":20,"nodeType":"179","messageId":"180","endLine":11,"endColumn":29},{"ruleId":"187","severity":1,"message":"188","line":55,"column":21,"nodeType":"189","endLine":55,"endColumn":60},{"ruleId":"177","severity":1,"message":"192","line":2,"column":30,"nodeType":"179","messageId":"180","endLine":2,"endColumn":40},{"ruleId":"177","severity":1,"message":"193","line":16,"column":9,"nodeType":"179","messageId":"180","endLine":16,"endColumn":16},{"ruleId":"177","severity":1,"message":"194","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"195","line":3,"column":19,"nodeType":"179","messageId":"180","endLine":3,"endColumn":28},{"ruleId":"177","severity":1,"message":"191","line":14,"column":20,"nodeType":"179","messageId":"180","endLine":14,"endColumn":29},{"ruleId":"196","severity":1,"message":"197","line":19,"column":24,"nodeType":"198","messageId":"199","endLine":19,"endColumn":26},{"ruleId":"187","severity":1,"message":"188","line":34,"column":21,"nodeType":"189","endLine":34,"endColumn":58},{"ruleId":"177","severity":1,"message":"200","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":17},{"ruleId":"177","severity":1,"message":"201","line":6,"column":46,"nodeType":"179","messageId":"180","endLine":6,"endColumn":63},{"ruleId":"177","severity":1,"message":"202","line":7,"column":10,"nodeType":"179","messageId":"180","endLine":7,"endColumn":26},{"ruleId":"177","severity":1,"message":"203","line":7,"column":48,"nodeType":"179","messageId":"180","endLine":7,"endColumn":66},{"ruleId":"177","severity":1,"message":"204","line":12,"column":10,"nodeType":"179","messageId":"180","endLine":12,"endColumn":24},{"ruleId":"177","severity":1,"message":"205","line":17,"column":23,"nodeType":"179","messageId":"180","endLine":17,"endColumn":35},{"ruleId":"196","severity":1,"message":"197","line":36,"column":22,"nodeType":"198","messageId":"199","endLine":36,"endColumn":24},{"ruleId":"206","severity":1,"message":"207","line":45,"column":8,"nodeType":"208","endLine":45,"endColumn":37,"suggestions":"209"},{"ruleId":"187","severity":1,"message":"188","line":81,"column":21,"nodeType":"189","endLine":81,"endColumn":45},{"ruleId":"187","severity":1,"message":"188","line":57,"column":41,"nodeType":"189","endLine":57,"endColumn":68},{"ruleId":"187","severity":1,"message":"188","line":68,"column":37,"nodeType":"189","endLine":68,"endColumn":62},{"ruleId":"210","severity":1,"message":"211","line":23,"column":17,"nodeType":"189","endLine":23,"endColumn":172},"no-unused-vars","'accessToken' is assigned a value but never used.","Identifier","unusedVar","'showModal' is assigned a value but never used.","'setShowModal' is assigned a value but never used.","no-native-reassign",["212"],"no-negated-in-lhs",["213"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'SignupForm' is defined but never used.","'setImgUrl' is assigned a value but never used.","'useHistory' is defined but never used.","'history' is assigned a value but never used.","'useState' is defined but never used.","'useParams' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'NavLink' is defined but never used.","'deletelibrarySong' is defined but never used.","'getPlaylistSongs' is defined but never used.","'deletePlaylistSong' is defined but never used.","'AiOutlineHeart' is defined but never used.","'setInLibrary' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'createlibrarySong'. Either exclude it or remove the dependency array. Outer scope values like 'createlibrarySong' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["214"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},"Update the dependencies array to be: [dispatch]",{"range":"217","text":"218"},[1653,1682],"[dispatch]"]