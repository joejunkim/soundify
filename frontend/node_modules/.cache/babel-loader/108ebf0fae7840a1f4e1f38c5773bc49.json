{"ast":null,"code":"import { csrfFetch } from \"./csrf.js\";\nexport const LOAD_LIBRAR = \"library/LOAD_LIBRAR\";\n\nconst loadLibrary = library => ({\n  type: LOAD_LIBRAR,\n  library\n});\n\nexport const getLibrary = () => async dispatch => {\n  const res = await csrfFetch(`/api/libraries/`);\n\n  if (res.ok) {\n    const library = await res.json();\n    dispatch(loadLibrary(library));\n  }\n};\nconst initialState = {};\n\nconst libraryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_LIBRAR:\n      return { ...state,\n        ...action.library\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default libraryReducer;","map":{"version":3,"sources":["/home/joe/app-academy/projects/soundify/frontend/src/store/library.js"],"names":["csrfFetch","LOAD_LIBRAR","loadLibrary","library","type","getLibrary","dispatch","res","ok","json","initialState","libraryReducer","state","action"],"mappings":"AAAA,SAASA,SAAT,QAA0B,WAA1B;AAEA,OAAO,MAAMC,WAAW,GAAG,qBAApB;;AAEP,MAAMC,WAAW,GAAIC,OAAD,KAAc;AAC9BC,EAAAA,IAAI,EAAEH,WADwB;AAE9BE,EAAAA;AAF8B,CAAd,CAApB;;AAKA,OAAO,MAAME,UAAU,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9C,QAAMC,GAAG,GAAG,MAAMP,SAAS,CAAE,iBAAF,CAA3B;;AAEA,MAAIO,GAAG,CAACC,EAAR,EAAY;AACR,UAAML,OAAO,GAAG,MAAMI,GAAG,CAACE,IAAJ,EAAtB;AACAH,IAAAA,QAAQ,CAACJ,WAAW,CAACC,OAAD,CAAZ,CAAR;AACH;AACJ,CAPM;AASP,MAAMO,YAAY,GAAG,EAArB;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACT,IAAf;AACI,SAAKH,WAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEH,WAAGC,MAAM,CAACV;AAFP,OAAP;;AAIJ;AACI,aAAOS,KAAP;AAPR;AASH,CAVD;;AAYA,eAAeD,cAAf","sourcesContent":["import { csrfFetch } from \"./csrf.js\";\n\nexport const LOAD_LIBRAR = \"library/LOAD_LIBRAR\";\n\nconst loadLibrary = (library) => ({\n    type: LOAD_LIBRAR,\n    library\n})\n\nexport const getLibrary = () => async dispatch => {\n    const res = await csrfFetch(`/api/libraries/`)\n\n    if (res.ok) {\n        const library = await res.json();\n        dispatch(loadLibrary(library));\n    }\n}\n\nconst initialState = {};\n\nconst libraryReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOAD_LIBRAR:\n            return {\n                ...state,\n                ...action.library\n            }\n        default:\n            return state;\n    }\n}\n\nexport default libraryReducer;\n"]},"metadata":{},"sourceType":"module"}