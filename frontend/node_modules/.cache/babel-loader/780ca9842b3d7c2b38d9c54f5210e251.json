{"ast":null,"code":"import { csrfFetch } from \"./csrf.js\";\nexport const LOAD_LIBRARIES = \"library/LOAD_LIBRARIES\";\n\nconst loadLibrary = libraries => ({\n  type: LOAD_LIBRARIES,\n  libraries\n});\n\nexport const getLibrary = () => async dispatch => {\n  const res = await csrfFetch(`/api/libraries/`);\n\n  if (res.ok) {\n    const libraries = await res.json();\n    dispatch(loadLibrary(libraries));\n  }\n};\nconst initialState = {};\n\nconst libraryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_LIBRARIES:\n      const allPlaylists = {};\n      action.playlists.forEach(playlist => {\n        allPlaylists[playlist.id] = playlist;\n      });\n      return { ...state,\n        ...allPlaylists\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default libraryReducer;","map":{"version":3,"sources":["/home/joe/app-academy/projects/soundify/frontend/src/store/library.js"],"names":["csrfFetch","LOAD_LIBRARIES","loadLibrary","libraries","type","getLibrary","dispatch","res","ok","json","initialState","libraryReducer","state","action","allPlaylists","playlists","forEach","playlist","id"],"mappings":"AAAA,SAASA,SAAT,QAA0B,WAA1B;AAEA,OAAO,MAAMC,cAAc,GAAG,wBAAvB;;AAEP,MAAMC,WAAW,GAAIC,SAAD,KAAgB;AAChCC,EAAAA,IAAI,EAAEH,cAD0B;AAEhCE,EAAAA;AAFgC,CAAhB,CAApB;;AAKA,OAAO,MAAME,UAAU,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9C,QAAMC,GAAG,GAAG,MAAMP,SAAS,CAAE,iBAAF,CAA3B;;AAEA,MAAIO,GAAG,CAACC,EAAR,EAAY;AACR,UAAML,SAAS,GAAG,MAAMI,GAAG,CAACE,IAAJ,EAAxB;AACAH,IAAAA,QAAQ,CAACJ,WAAW,CAACC,SAAD,CAAZ,CAAR;AACH;AACJ,CAPM;AASP,MAAMO,YAAY,GAAG,EAArB;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACT,IAAf;AACI,SAAKH,cAAL;AACI,YAAMa,YAAY,GAAG,EAArB;AACAD,MAAAA,MAAM,CAACE,SAAP,CAAiBC,OAAjB,CAA0BC,QAAD,IAAc;AACnCH,QAAAA,YAAY,CAACG,QAAQ,CAACC,EAAV,CAAZ,GAA4BD,QAA5B;AACH,OAFD;AAGA,aAAO,EACH,GAAGL,KADA;AAEH,WAAGE;AAFA,OAAP;;AAIJ;AACI,aAAOF,KAAP;AAXR;AAaH,CAdD;;AAgBA,eAAeD,cAAf","sourcesContent":["import { csrfFetch } from \"./csrf.js\";\n\nexport const LOAD_LIBRARIES = \"library/LOAD_LIBRARIES\";\n\nconst loadLibrary = (libraries) => ({\n    type: LOAD_LIBRARIES,\n    libraries\n})\n\nexport const getLibrary = () => async dispatch => {\n    const res = await csrfFetch(`/api/libraries/`)\n\n    if (res.ok) {\n        const libraries = await res.json();\n        dispatch(loadLibrary(libraries));\n    }\n}\n\nconst initialState = {};\n\nconst libraryReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOAD_LIBRARIES:\n            const allPlaylists = {};\n            action.playlists.forEach((playlist) => {\n                allPlaylists[playlist.id] = playlist;\n            })\n            return {\n                ...state,\n                ...allPlaylists,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default libraryReducer;\n"]},"metadata":{},"sourceType":"module"}